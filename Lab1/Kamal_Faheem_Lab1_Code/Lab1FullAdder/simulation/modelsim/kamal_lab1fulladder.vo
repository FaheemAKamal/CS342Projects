// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "02/24/2019 16:29:31"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module kamal_lab1fulladder (
	kamal_outputs,
	kamal_inputa,
	kamal_inputb,
	kamal_inputCin,
	kamal_outputCout);
output 	kamal_outputs;
input 	kamal_inputa;
input 	kamal_inputb;
input 	kamal_inputCin;
output 	kamal_outputCout;

// Design Ports Information
// kamal_outputs	=>  Location: PIN_G19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// kamal_outputCout	=>  Location: PIN_F19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// kamal_inputa	=>  Location: PIN_AB28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// kamal_inputb	=>  Location: PIN_AC28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// kamal_inputCin	=>  Location: PIN_AC27,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \kamal_outputs~output_o ;
wire \kamal_outputCout~output_o ;
wire \kamal_inputb~input_o ;
wire \kamal_inputCin~input_o ;
wire \kamal_inputa~input_o ;
wire \inst4~0_combout ;
wire \inst5~0_combout ;


// Location: IOOBUF_X69_Y73_N16
cycloneive_io_obuf \kamal_outputs~output (
	.i(\inst4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\kamal_outputs~output_o ),
	.obar());
// synopsys translate_off
defparam \kamal_outputs~output .bus_hold = "false";
defparam \kamal_outputs~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X94_Y73_N2
cycloneive_io_obuf \kamal_outputCout~output (
	.i(\inst5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\kamal_outputCout~output_o ),
	.obar());
// synopsys translate_off
defparam \kamal_outputCout~output .bus_hold = "false";
defparam \kamal_outputCout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X115_Y14_N1
cycloneive_io_ibuf \kamal_inputb~input (
	.i(kamal_inputb),
	.ibar(gnd),
	.o(\kamal_inputb~input_o ));
// synopsys translate_off
defparam \kamal_inputb~input .bus_hold = "false";
defparam \kamal_inputb~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X115_Y15_N8
cycloneive_io_ibuf \kamal_inputCin~input (
	.i(kamal_inputCin),
	.ibar(gnd),
	.o(\kamal_inputCin~input_o ));
// synopsys translate_off
defparam \kamal_inputCin~input .bus_hold = "false";
defparam \kamal_inputCin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X115_Y17_N1
cycloneive_io_ibuf \kamal_inputa~input (
	.i(kamal_inputa),
	.ibar(gnd),
	.o(\kamal_inputa~input_o ));
// synopsys translate_off
defparam \kamal_inputa~input .bus_hold = "false";
defparam \kamal_inputa~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X114_Y17_N8
cycloneive_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = \kamal_inputb~input_o  $ (\kamal_inputCin~input_o  $ (\kamal_inputa~input_o ))

	.dataa(\kamal_inputb~input_o ),
	.datab(gnd),
	.datac(\kamal_inputCin~input_o ),
	.datad(\kamal_inputa~input_o ),
	.cin(gnd),
	.combout(\inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst4~0 .lut_mask = 16'hA55A;
defparam \inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X114_Y17_N10
cycloneive_lcell_comb \inst5~0 (
// Equation(s):
// \inst5~0_combout  = (\kamal_inputb~input_o  & ((\kamal_inputCin~input_o ) # (\kamal_inputa~input_o ))) # (!\kamal_inputb~input_o  & (\kamal_inputCin~input_o  & \kamal_inputa~input_o ))

	.dataa(\kamal_inputb~input_o ),
	.datab(gnd),
	.datac(\kamal_inputCin~input_o ),
	.datad(\kamal_inputa~input_o ),
	.cin(gnd),
	.combout(\inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst5~0 .lut_mask = 16'hFAA0;
defparam \inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign kamal_outputs = \kamal_outputs~output_o ;

assign kamal_outputCout = \kamal_outputCout~output_o ;

endmodule
