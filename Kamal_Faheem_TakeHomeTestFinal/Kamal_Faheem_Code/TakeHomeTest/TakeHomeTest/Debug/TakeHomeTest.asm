; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27030.1 

	TITLE	C:\Users\Raiden\source\repos\TakeHomeTest\TakeHomeTest\TakeHomeTest.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__DA493C92_pch@h DB 01H
__FA4FEDAC_takehometest@pch DB 01H
__B83D4A4D_takehometest@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?dot_product@@YAHQAH0H@Z			; dot_product
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?dot_product@@YAHQAH0H@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_dp$ = -8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_size$ = 16						; size = 4
?dot_product@@YAHQAH0H@Z PROC				; dot_product, COMDAT
; File c:\users\raiden\source\repos\takehometest\takehometest\takehometest.cpp
; Line 5
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __B83D4A4D_takehometest@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 6
	mov	DWORD PTR _dp$[ebp], 0
; Line 9
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@dot_produc
$LN2@dot_produc:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@dot_produc:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jge	SHORT $LN1@dot_produc
; Line 10
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _i$1[ebp]
	mov	esi, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	imul	eax, DWORD PTR [esi+edx*4]
	add	eax, DWORD PTR _dp$[ebp]
	mov	DWORD PTR _dp$[ebp], eax
; Line 11
	mov	eax, DWORD PTR _dp$[ebp]
	jmp	SHORT $LN1@dot_produc
; Line 12
	jmp	SHORT $LN2@dot_produc
$LN1@dot_produc:
; Line 13
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?dot_product@@YAHQAH0H@Z ENDP				; dot_product
_TEXT	ENDS
END
